
#ELIMINADO PARA RECIBIR LOS LOGS DESDE FILEBEAT
#input {
  #file {
    #path => "/usr/share/logstash/kafka_logs/broker/*.log"
    #type => "kafka"
  #}
  #file {
    #path => "/usr/share/logstash/cassandra_data/logs/*.log"
    #type => "cassandra"
  #}
  #file {
    #path => "/usr/share/logstash/zookeeper_logs/*.log"
    #type => "zookeeper"
  #}
  #file {
    #path => "/usr/share/logstash/spark_master_logs/*.log"
    #type => "spark"
  #}
  #file {
    #path => "/usr/share/logstash/spark_worker_logs/*.log"
    #type => "spark"
  #}
#}

#ANHADIDO PARA RECIBIR LOS LOGS DESDE FILEBEAT
input {
  beats {
    port => 5044
  }
}

filter {
  if [log_source] == "kafka" {
    if [log][file][path] =~ /server\.log$/ {
      # Filtrar solo los mensajes de autenticación fallida
      if [message] !~ /Failed authentication/ {
        drop { }
      } else {
        # Extraer información específica del mensaje de autenticación fallida
        grok {
          match => { "message" => "Failed authentication with /%{IP:client_ip} \(%{GREEDYDATA:error_message}\)" }
        }
        mutate {
          add_field => { "log_type" => "authentication" }
          remove_field => [ "ecs", "input", "tags", "agent", "host" ]
        }
      }
    } else if [log][file][path] =~ /kafka-authorizer\.log$/ {
      mutate {
        add_field => { "log_type" => "authorization" }
        remove_field => [ "ecs", "input", "tags", "agent", "host" ]
      }
    } else {
      drop { }
    }
  }

  else if [log_source] == "cassandra" {
    # Filtros específicos para logs de Cassandra 
     drop { }
  }
  else if [log_source] == "zookeeper" {
    # Filtros específicos para logs de Zookeeper 
    drop { }
  }
  else if [log_source] == "spark" {
    # Filtros específicos para logs de Spark 
    drop { }
  }
}


output {
  if [log_type] == "authentication" {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "logstash-kafka-authentication-%{+YYYY.ww}"
    }
  } else if [log_type] == "authorization" {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "logstash-kafka-authorization-%{+YYYY.ww}"
    }
  } else{
	  elasticsearch {
	    hosts => ["http://elasticsearch:9200"]
	    index => "logstash-%{log_source}-%{+YYYY.ww}"
	    # El nombre del índice en Elasticsearch será logstash-kafka-YYYY.MM.dd o logstash-cassandra-YYYY.MM.dd, etc.
	  }
  }
	stdout { codec => rubydebug }
}






