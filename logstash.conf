input {
  beats {
    port => 5044
  }
}

filter {
  if [log_type] == "autenticacion" {
    # Filtrar solo los mensajes de autenticaciÃ³n fallida
    if [message] =~ /Failed authentication/ {
      grok {
        match => { "message" => "Failed authentication with /%{IP:ip}" }
      }
    } else {
      drop { }
    }
  } else if [log_type] == "autorizacion" {
    grok {
      match => { 
        "message" => [
          "\[.*\] INFO Principal = User:%{USERNAME:usuario} is Denied Operation = %{WORD:operation} from host = %{IP:host_ip} on resource = %{WORD:resource_type}:%{WORD:literal}:%{NOTSPACE:resource_name} for request = %{WORD:request_type}",
          "\[.*\] INFO Principal = User:%{USERNAME:usuario} is Denied Operation = %{WORD:operation} from host = %{IP:host_ip} on resource = %{WORD:resource_type}:%{WORD:literal}:%{NOTSPACE:resource_name} for request = %{WORD:request_type} with resourceRefCount = %{INT:resource_ref_count}"
        ]
      }
    }
  }
}

output {
  if [log_type] == "autenticacion" {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "logstash-kafka-autenticacion-%{+YYYY.MM}"
    }
  } else if [log_type] == "autorizacion" {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "logstash-kafka-autorizacion-%{+YYYY.MM}"
    }
  }
  stdout { codec => rubydebug }
}










